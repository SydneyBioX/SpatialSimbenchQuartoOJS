"0","harrelCIndexMetric <- function(gs, to_eval) {"
"0","  # cli::cli_abort(c("
"0","  #   ""Harrell's c-index is not supported yet! :("""
"0","  # ))"
"0","  # gs is survival data with time and event, here assume input only two data columns called time and status"
"0","  # to_eval is the prediction of risk "
"0","  harrelC1 <- Hmisc::rcorr.cens(-prediction_list[[2]], groundtruth_list[[2]])"
"0","  return(harrelC1[""C Index""])"
"0","}"
"0",""
"0","beggCIndexMetric <- function(gs, to_eval) {"
"0","  # cli::cli_abort(c("
"0","  #   ""Begg's c-index is not supported yet! :("""
"0","  # ))"
"0","  # gs:list(surv_object[ train_index], surv_object[ test_index])"
"0","  # to_eval: list(predictors[ train_index], predictors[test_index])"
"0","  begg_cindex <- survAUC::BeggC(gs[[1]], gs[[2]],to_eval[[1]], to_eval[[2]])"
"0","  return(begg_cindex)"
"0","}"
"0",""
"0","unoCIndexMetric <- function(gs, to_eval) {"
"0","  # cli::cli_abort(c("
"0","  #   ""Uno's c-index is not supported yet! :("""
"0","  # ))"
"0","  "
"0","  uno_cindex <- survAUC::UnoC(gs[[1]], gs[[2]], to_eval)"
"0","  return(uno_cindex)"
"0",""
"0","}"
"0",""
"0","ghCIndexMetric <- function(gs, to_eval) {"
"0","  # cli::cli_abort(c("
"0","  #   ""GH's c-index is not supported yet! :("""
"0","  # ))"
"0","  gh_cindex <- survAUC::GHCI(to_eval)"
"0","  return(gh_cindex)"
"0","}"
"0",""
"0","brierScoreMetric <- function(gs, to_eval) {"
"0","  # cli::cli_abort(c("
"0","  #   ""Brier's score is not supported yet! :("""
"0","  # ))"
"0","  time <- gs[[1]][,""time""]"
"0","  brier_score <- survAUC::predErr(gs[[1]], gs[[2]],to_eval[[1]], to_eval[[2]],times=time, type = ""brier"", int.type = ""unweighted"")$error"
"0","  return(brier_score)"
"0","}"
"0",""
"0","timeDependentAUCMetric <- function(gs, to_eval) {"
"0","  # cli::cli_abort(c("
"0","  #   ""Time dependent AUC is not supported yet! :("""
"0","  # ))"
"0","  time <- gs[[1]][,""time""]"
"0","  AUC_CD <- survAUC::AUC.uno(gs[[1]], gs[[2]], to_eval[[2]], time)"
"0","  return(AUC_CD)"
"0","}"
